name: Build

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  build:
    name: Build
    runs-on: windows-latest
    concurrency:
      group: ukcp-build-${{ github.ref }}
      cancel-in-progress: true
    steps:       
      - name: Checkout Code
        uses: actions/checkout@v2

      # Environment things
      - name: Add Msbuild To PATH
        uses: microsoft/setup-msbuild@v1.0.2
        with:
         vs-version: '16.5'

      - name: Setup Visual Studio Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

      - name: Cache cURL
        id: cache-curl
        uses: actions/cache@v2.1.3
        with:
          path: "C:\\hostedtoolcache\\windows\\libcurl"
          key: "ukcp-curl-build"

      - name: Download and Build cURL
        if: steps.cache-curl.outputs.cache-hit != 'true'
        env:
          CURL_DOWNLOAD_URL: "https://github.com/curl/curl/releases/download/curl-7_76_1/curl-7.76.1.zip"
          CURL_VERSION: 7.76.1
        run: |
            New-Item -Path "C:\\hostedtoolcache\\windows" -Name "libcurl" -ItemType "directory"
            $WebClient = New-Object System.Net.WebClient
            $WebClient.DownloadFile(${env:CURL_DOWNLOAD_URL}, "C:\\hostedtoolcache\\windows\\libcurl\\curl.zip")
            Set-Location -Path "C:\\hostedtoolcache\\windows\\libcurl"
            7z x curl.zip
            Remove-Item curl.zip
            Set-Location -Path "C:\\hostedtoolcache\\windows\\libcurl\\curl-${env:CURL_VERSION}\\winbuild"
            nmake /f Makefile.vc mode=static ENABLE_SCHANNEL=yes

      - name: Setup cURL Environment
        env:
          CURL_VERSION: 7.76.1
        run: |
          echo "CURL_INCLUDEDIR=C:\\hostedtoolcache\\windows\\libcurl\\curl-${env:CURL_VERSION}\\builds\\libcurl-vc-x86-release-static-ipv6-sspi-schannel\\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CURL_LIBRARYDIR=C:\\hostedtoolcache\\windows\\libcurl\\curl-${env:CURL_VERSION}\\builds\\libcurl-vc-x86-release-static-ipv6-sspi-schannel\\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Restore Nuget Packages
        run: |
          cd msvc
          nuget restore
          cd ..

      # If we're running on main, get the next release version
      - name: Setup Build Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: .\\.github\\workflows\\plugin_version.ps1
      
      # Run the build and tests
      - name: Run Build
        run: msbuild msvc/UKControllerPlugin.sln /verbosity:minimal /property:Configuration=Release -m

      - name: Run Tests
        run: ".\\bin\\Release\\UKControllerPluginTest.exe"

      # Run the linter
      - name: Install Cpplint
        run: pip install cpplint

      - name: Run Lint
        run: cpplint --quiet --recursive src/ test/
      
      # Upload artifacts
      - name: Upload Core Binary As Artifact
        uses: actions/upload-artifact@v2
        with:
          name: UKControllerPluginCore.dll
          path: ".\\bin\\Release\\UKControllerPluginCore.dll"

      - name: Upload Updater Binary As Artifact
        uses: actions/upload-artifact@v2
        with:
          name: UKControllerPluginUpdater.dll
          path: ".\\bin\\Release\\UKControllerPluginUpdater.dll"

      - name: Upload Loader Binary As Artifact
        uses: actions/upload-artifact@v2
        with:
          name: UKControllerPlugin.dll
          path: ".\\bin\\Release\\UKControllerPlugin.dll"

      # If we're building on main, lets do a release'
      - name: Create Release
        if: github.ref == 'refs/heads/main'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx -p @semantic-release/changelog -p semantic-release@17 semantic-release
